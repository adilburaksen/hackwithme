---
import { Code } from 'astro:components';

const code = `interface AppSecEngineer {
    name: string;
    skills: string[];
    tools: string[];
    interests: string[];
};

type ContactType = 'github' | 'twitter' | 'linkedIn' | 'email';

const me: AppSecEngineer = {
    name: 'Adil Burak Şen',
    skills: [
        'Web Application Security',
        'API Security',
        'Secure Code Review',
        'Static & Dynamic Analysis',
        'CI/CD Security Integration',
        'Security Automation',
        'False Positive Reduction',
        'Pentest Reporting'
    ],
    tools: [
    'Burp Suite',
    'Fortify SSC',
    'Invicti DAST',
    'Jenkins',
    'GitHub Actions',
    'Docker',
    'Jira',
    'Confluence',
    'Nmap',
    'Metasploit',
    'Postman',
    'Bash',
    'PowerShell',
    ],
    interests: [
        'Hack The Box',
        'TryHackMe',
        'Bug Bounty',
        'OWASP Top 10 & API Top 10',
        'Security Tooling',
        'Exploit Reproduction',
        'Offensive Lab Work'
    ]
};

const contact = (type: ContactType): string => {
    switch (type) {
        case 'github':
            return 'https://github.com/adilburaksen';
        case 'twitter':
            return 'https://x.com/adilburaksen';
        case 'linkedIn':
            return 'https://www.linkedin.com/in/adilburaksen';
        case 'email':
            return 'adilburaksen@proton.me';
        default:
            return 'Just ping me on Hack The Box.';
    }
};

`;
---

<Code
    code={code}
    lang="js"
    wrap={true}
/>

<style is:global>

    /* Custom styling for code block line numbers */
    pre.astro-code {
        @apply bg-transparent !important;
    }

    pre.astro-code code {
        @apply block;
        counter-reset: step;
        counter-increment: step 0;
    }

    pre.astro-code code .line {
        @apply relative;
    }

    pre.astro-code code .line::before {
        content: counter(step);
        counter-increment: step;
        @apply text-gray-600 pr-2;
    }

</style>